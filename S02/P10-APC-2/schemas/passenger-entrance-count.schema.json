{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/ITxPT/schematest/main/S02/P10-APC-2/schemas/passenger-entrance-count.schema.json",
    "type": "object",
    "title": "ITxPT S02P10 APC-2 service - Passenger Entrance Count Schema Definition",
    "description": "ITxPT service interface for standardized interoperability in public transport - JSON schema",
    "default": {},
    "additionalProperties": true,
    "required": [
        "version",
        "atDateTime",
        "providerRef",
        "entranceRef",
        "count"
    ],
    "properties": {
        "version": {
            "description": "The version of the ITxPT specification S02P10",
            "type": "string",
            "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
        },
        "atDateTime": {
            "description": "ISO 8601 formatted timestamp when this data record was generated",
            "type": "string",
            "format": "date-time"
        },
        "providerRef": {
            "description": "Unique reference name of the provider of this data record, exactly as offered via DNS-SD",
            "$ref" : "#/$defs/referenceType"
        },
        "entranceRef": {
            "description": "Unique reference name of an entrance, exactly as used in other parts of the schema (Foreign Key).",
            "$ref" : "#/$defs/referenceType"
        },
        "qf": {
            "description": "quality level of the count data. TODO define criteria ",
            "$ref": "#/$defs/qualityType"
        },
        "tsCountStart": {
            "description": "ISO 8601 formatted timestamp when the incremental counting of this entrance started from zero.",
            "type": "string",
            "format": "date-time"
        },
        "count": {
            "description": "the actual count results of this entrance",
            "type":"object",
            "additionalProperties": true,
            "required": ["in", "out"],
            "properties": {
                "in": {
                    "description": "counts in the nominal 'in' direction",
                    "$ref" : "#/$defs/objectCountType"
                },
                "out": {
                    "description": "counts in the nominal 'out' direction",
                    "$ref" : "#/$defs/objectCountType"
                }
            }
        },
        "trigger": {
            "description": "the reason for the update of the results",
            "$ref": "#/$defs/triggerType"
        }
    },
    "$defs": {
        "nonNegativeInteger": {
            "type": "integer",
            "minimum": 0
        },
        "nonNegativeNumber": {
            "type": "number",
            "minimum": 0.0
        },
        "referenceType": {
            "type": "string",
            "pattern": "^\\w.*"
        },
        "objectCountType": {
            "description": "count values by object categories",
            "type": "object",
            "properties": {
                "adult": {
                    "description": "Category: adult person",
                    "$ref": "#/$defs/nonNegativeInteger"
                },
                "child": {
                    "description": "Category: child person",
                    "$ref": "#/$defs/nonNegativeInteger"
                },
                "bike": {
                    "description": "Category: bike. This is ONLY the bike. The person carrying it along is separately counted as adult or child.",
                    "$ref": "#/$defs/nonNegativeInteger"
                },
                "wheelchair": {
                    "description": "Category: wheelchair. This is ONLY the wheelchair. The person using it is separately counted as adult or child.",
                    "$ref": "#/$defs/nonNegativeInteger"
                },
                "pram": {
                    "description": "Category: pram or stroller. This is ONLY the pram or stroller. The person carrying it is separately counted as adult or child.",
                    "$ref": "#/$defs/nonNegativeInteger"
                },
                "luggage": {
                    "description": "Category: luggage. This is ONLY the luggage. The person carrying it is separately counted as adult or child. Decimals are allowed to specify small and oversized items",
                    "$ref": "#/$defs/nonNegativeNumber"
                },
                "other": {
                    "description": "Category: any detected object of a relevant size that cannot be identified more precisely. This is ONLY the object. The person carrying it is separately counted as adult or child. Decimals are allowed to specify small and oversized items",
                    "$ref": "#/$defs/nonNegativeNumber"
                }
            }
        },
        "qualityType": {
            "type": "string",
            "enum": ["HIGH", "MODERATE", "LOW", "ERROR"]
        },
        "triggerType": {
            "type":"string",
            "oneOf": [
                {"enum": ["DOORS_CLOSED", "THRESHOLD", "PERIODIC", "COUNT_ADJUST", "PROVIDER_RESET"]},
                {"pattern": "^[a-z0-9_]+"}
            ]
        }
    }
}
